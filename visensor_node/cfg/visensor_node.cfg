#! /usr/bin/env python

PACKAGE="visensor_node"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ========================= ALL CAMERAS ==========================
#       Name       Type      Level Description     Default Min   Max
gen.add("cam_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam_global_analog_gain",      double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

gen.add("individual_cam_config", bool_t, 0, "Use individual cam configuration settings (below)", False)

# ========================= strobe ==========================

gen.add("strobe",       int_t,    0,    "strobe", 0,     0, 1000)
# Max. without active cooling
# gen.add("strobe",       int_t,    0,    "strobe", 0,     0, 1000)

gen.add("strobe_mode",       bool_t,    0,    "flashing led", True)

# ========================= CAMERA 0 ==========================

gen.add("cam0_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam0_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam0_global_analog_gain",      double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam0_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam0_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam0_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam0_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam0_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam0_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam0_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam0_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam0_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 1 ==========================

gen.add("cam1_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam1_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam1_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam1_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam1_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam1_min_coarse_shutter_width",      double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam1_max_coarse_shutter_width",      double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam1_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam1_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam1_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam1_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam1_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 2 ==========================

gen.add("cam2_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam2_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam2_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam2_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam2_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam2_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam2_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam2_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam2_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam2_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam2_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam2_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 3 ==========================

gen.add("cam3_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam3_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam3_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam3_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam3_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam3_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam3_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam3_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam3_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam3_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam3_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam3_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 4 ==========================

gen.add("cam4_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam4_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam4_global_analog_gain",      double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam4_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam4_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam4_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam4_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam4_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam4_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam4_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam4_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam4_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 5 ==========================

gen.add("cam5_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam5_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam5_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam5_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam5_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam5_min_coarse_shutter_width",      double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam5_max_coarse_shutter_width",      double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam5_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam5_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam5_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam5_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam5_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 6 ==========================

gen.add("cam6_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam6_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam6_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam6_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam6_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam6_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam6_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam6_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam6_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam6_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam6_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam6_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= CAMERA 7 ==========================

gen.add("cam7_agc_enable",       bool_t,    0,    "automatic gain control", True)
gen.add("cam7_max_analog_gain",       double_t,    0,    "max analog gain", 4,     1, 4)
gen.add("cam7_global_analog_gain",    double_t,    0,    "analog gain", 1,     1, 4)
gen.add("cam7_global_analog_gain_attenuation",       bool_t,    0,    "gain attenuation", False)
gen.add("cam7_aec_enable",       bool_t,    0,    "automatic exposure control", True)
gen.add("cam7_min_coarse_shutter_width",       double_t,    0,    "min shutter width in ms", 0.06768,     0.06768, 32.0)
gen.add("cam7_max_coarse_shutter_width",       double_t,    0,    "max shutter width in ms", 16.92,     0.06768, 32.0)
gen.add("cam7_coarse_shutter_width",       double_t,    0,    "shutter width in ms", 16.2432,     0.06768, 32.0)

gen.add("cam7_adc_mode",       int_t,    0,    "ADC Mode", 2,2,3)
gen.add("cam7_vref_adc_voltage_level",       int_t,    0,    "Vref ADC Voltage level", 4,0,7)

gen.add("cam7_black_level_calibration_manual_override",       bool_t,    0,    "Black level calibration manual override", False)
gen.add("cam7_black_level_calibration_value",       int_t,    0,    "Black level calibration value", 0,-127,127)

# ========================= Dense Matcher ==========================
gen.add("penalty_1",       int_t,    0,    " ", 6,     0, 255)
gen.add("penalty_2",       int_t,    0,    " ", 200,     0, 255)
gen.add("threshold",       int_t,    0,    " ", 100,     0, 255)
gen.add("lr_check",       int_t,    0,    " ", 0,     0, 32)

# ========================= External Trigger ==========================
gen.add("enable_trigger_0",       bool_t,    0,    "Enable first trigger line", False)
gen.add("enable_trigger_1",       bool_t,    0,    "Enable sedond trigger line", False)
gen.add("enable_trigger_2",       bool_t,    0,    "Enable third trigger line", False)

direction_enum = gen.enum([ gen.const("Output",      bool_t, False, "Set trigger direction to output"),
	gen.const("Input",     bool_t, True, "Set trigger direction to input")], "An enum to choose direction")


gen.add("trigger_0_direction",       bool_t,    0,    "Sets trigger direction.", True, edit_method=direction_enum)
gen.add("trigger_1_direction",       bool_t,    0,    "Sets trigger direction.", True, edit_method=direction_enum)
gen.add("trigger_2_direction",       bool_t,    0,    "Sets trigger direction.", True, edit_method=direction_enum)

gen.add("trigger_0_rate",       int_t,    0,    "Rate of trigger line in Hz ", 0, 0, 1000)
gen.add("trigger_1_rate",       int_t,    0,    "Rate of trigger line in Hz ", 0, 0, 1000)
gen.add("trigger_2_rate",       int_t,    0,    "Rate of trigger line in Hz ", 0, 0, 1000)

gen.add("trigger_0_offset",       int_t,    0,    "Offset of trigger line in 10 microseconds steps", 0, 0, 100000)
gen.add("trigger_1_offset",       int_t,    0,    "Offset of trigger line in 10 microseconds steps", 0, 0, 100000)
gen.add("trigger_2_offset",       int_t,    0,    "Offset of trigger line in 10 microseconds steps", 0, 0, 100000)

exit(gen.generate(PACKAGE, "visensor_node", "Driver"))

