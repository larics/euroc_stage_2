%YAML:1.0
# 'cameras' sequence contains for each camera: T_SC, image_dimension, distortion_coefficients, distortion_type, focal_length and principal_point
# if this sequence or one of the parameters of an entry is missing the calibration will not be used. Depending on 'useDriver' it will try to 
# get the calibration directly from the sensor. If useDriver==false it will first try to get the calibration via the visensor calibration service 
# and then as a last resort the calibration topic is tried. 
cameras:
    - {T_SC:
         [-0.999891984566148, 0.013207609046214602, -0.00644812093960214, 0.07264952296902576,
          -0.013172639774753608, -0.9998984613768273, -0.005435852979743759, -0.009851405765514418,
          -0.0065192608272690395, -0.005350327049364372, 0.9999644359869655, 0.010564158428968145,
           0.0, 0.0, 0.0, 1.0],
       image_dimension: [752, 480],
       distortion_coefficients: [-0.3091674142711387, 0.10905899434862235, 9.527033720237582e-05, -0.0005776582308113238, 0.0],
       distortion_type: radialtangential,
       focal_length: [465.2005090331355, 465.4821196969644],
       principal_point: [407.7552059925612, 244.36152062408814]}
    - {T_SC:
         [-0.9998492789922178, 0.01495096564693891, -0.00882541358611423, -0.06765868727051699,
          -0.01492104249736023, -0.9998827343911412, -0.0034467313916360957, -0.01172240446048193,
          -0.008875910631247201, -0.0033145275256320035, 0.9999551150515444, 0.00973189255368364,
           0.0, 0.0, 0.0, 1.0],
       image_dimension: [752, 480],
       distortion_coefficients: [-0.30098670704037306, 0.09347840167059357, 0.00020272056432327966, -0.000576898338628004, 0.0],
       distortion_type: radialtangential,
       focal_length: [466.13901328497104, 466.5291851440462],
       principal_point: [358.83335820698255, 250.4603569874057]}

camera_params:
    camera_rate: 20
    sigma_absolute_translation: 1.0e-10
    sigma_absolute_orientation: 1.0e-3
    sigma_c_relative_translation: 0.0 #1.0e-6 # below 1.0e-6 ruines numerics...
    sigma_c_relative_orientation: 0.0 #1.0e-6 # below 1.0e-6 ruines numerics...
    timestamp_tolerance: 0.005 # seconds

# tranform Body-Sensor (IMU)
T_BS:
    [1.0000, 0.0000, 0.0000, 0.0000,
     0.0000, 1.0000, 0.0000, 0.0000,
     0.0000, 0.0000, 1.0000, 0.0000,
     0.0000, 0.0000, 0.0000, 1.0000]

imu_params:
    a_max: 176.0 #m/s^2
    g_max: 7.8 #rad/s
    sigma_g_c: 6.0e-4 #6.0e-4
    sigma_a_c: 2.0e-3 #2.0e-3
    sigma_gw_c: 3.0e-6 #3.0e-6
    sigma_aw_c: 2.0e-5 #2.0e-5
    tau: 3600.0
    g: 9.81007
    a0: [ 0.0, -0.0, 0.00 ]
    #[09:49:28] Joern: accelerometer_noise_density: 1.7e-3, accelerometer_random_walk: 6.3895e-005,
    imu_rate: 200
#gyroscope_noise_density: 0.2e-3, gyroscope_random_walk: 2.8577e-006

# use the IMU at all?
useImu: true

# VIO window parameters
numKeyframes: 5
numImuFrames: 3

# ceres optimization options
ceres_options:
    minIterations: 3
    maxIterations: 10
    timeLimit: 0.035      # [s] negative values will set the an unlimited time limit

# detection
detectionThreshold: 40.0
detectionOctaves: 0

# delay of images [s]: -8ms with zero-order hold integration at 200 Hz: makes sense.
imageDelay: -0.0055 # -0.0055 without Joern's awesome synchronization, 0 otherwise

# display Images?
displayImages: true

# use direct driver
useDriver: false

# save optimization to disk
saveGraphs: false

# rate at which odometry updates are published
# only works properly if imu_rate/publish_rate is an integer!!
publish_rate: 200

publishing_options:
    landmarkQualityThreshold: 1.0e-5     # landmark with lower quality will not be published
    maximumLandmarkQuality: 0.05         # landmark with higher quality will be published with the maximum colour intensity
    maxPathLength: 20                    # maximum length of the published path
    publishImuPropagatedState: true      # publish state after each processed IMU measurement instead of after each processed image
